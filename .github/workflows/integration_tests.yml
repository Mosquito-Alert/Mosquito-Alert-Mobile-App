name: Integration testing

on:
  pull_request:
  merge_group:
  push:
    # branches: ["main"]

jobs:
  android_integration_tests:
    name: Run integration tests (attempt ${{ matrix.attempt }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        attempt: [1, 2, 3, 4]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Java 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - uses: kuhnroyal/flutter-fvm-config-action/setup@v3

    - name: Get Dependencies
      run: flutter pub get

    - name: Decode google-services.json
      run: echo $GOOGLE_SERVICES_JSON | base64 --decode > android/app/google-services.json
      env:
        GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON_ANDROID_BASE64 }}

    - name: Enable KVM group perms
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: Gradle cache
      uses: gradle/actions/setup-gradle@v3
      
    - name: AVD cache
      uses: actions/cache@v4
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-33

    - name: create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 33
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: false
        script: echo "Generated AVD snapshot for caching."

    - name: Clean up emulator/app state
      run: |
        adb uninstall com.example.mosquito_alert_app || true
        adb emu kill || true

    - name: Run integration tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 33
        target: google_apis
        arch: x86_64
        profile: Nexus 6
        script: |
          adb wait-for-device
          adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
          flutter test integration_test --timeout=15m
